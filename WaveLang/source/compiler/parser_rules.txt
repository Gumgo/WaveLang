PROD(NS(start),
	NS(global_scope))

PROD(NS(global_scope),
	NS(global_scope_item_list))

PROD(NS(global_scope_item_list))
PROD(NS(global_scope_item_list),
	NS(global_scope_item_list), NS(global_scope_item))

PROD(NS(global_scope_item),
	NS(module_declaration))

PROD(NS(type),
	TS(keyword_real))
PROD(NS(type),
	TS(keyword_bool))
PROD(NS(type),
	TS(keyword_string))

PROD(NS(type_or_void),
	TS(keyword_real))
PROD(NS(type_or_void),
	TS(keyword_bool))
PROD(NS(type_or_void),
	TS(keyword_string))
PROD(NS(type_or_void),
	TS(keyword_void))

PROD(NS(module_declaration),
	TS(keyword_module), NS(type_or_void), TS(identifier), TS(left_parenthesis), NS(module_declaration_arguments), TS(right_parenthesis), NS(scope))

PROD(NS(module_declaration_arguments))
PROD(NS(module_declaration_arguments),
	NS(module_declaration_argument_list))

PROD(NS(module_declaration_argument_list),
	NS(module_declaration_argument))
PROD(NS(module_declaration_argument_list),
	NS(module_declaration_argument_list), TS(comma), NS(module_declaration_argument))

PROD(NS(module_declaration_argument),
	NS(module_declaration_argument_qualifier), NS(type), TS(identifier))

PROD(NS(module_declaration_argument_qualifier),
	TS(keyword_in))
PROD(NS(module_declaration_argument_qualifier),
	TS(keyword_out))

PROD(NS(scope),
	TS(left_brace), NS(scope_item_list), TS(right_brace))

PROD(NS(scope_item_list))
PROD(NS(scope_item_list),
	NS(scope_item_list), NS(scope_item))

PROD(NS(scope_item),
	NS(scope))
PROD(NS(scope_item),
	NS(named_value_declaration), TS(semicolon))
PROD(NS(scope_item),
	NS(named_value_assignment), TS(semicolon))
PROD(NS(scope_item),
	NS(expression), TS(semicolon))
PROD(NS(scope_item),
	NS(module_return_statement), TS(semicolon))

PROD(NS(module_return_statement),
	TS(keyword_return), NS(expression))

PROD(NS(named_value_declaration),
	NS(type), TS(identifier))
PROD(NS(named_value_declaration),
	NS(type), TS(identifier), NS(expression_assignment))

PROD(NS(named_value_assignment),
	TS(identifier), NS(expression_assignment))

PROD(NS(expression),
	NS(expr_1))

PROD(NS(expression_assignment),
	TS(operator_assignment), NS(expression))

PROD(NS(expr_1),
	NS(expr_1), TS(operator_addition), NS(expr_2))
PROD(NS(expr_1),
	NS(expr_1), TS(operator_subtraction), NS(expr_2))
PROD(NS(expr_1),
	NS(expr_1), TS(operator_concatenation), NS(expr_2))
PROD(NS(expr_1),
	NS(expr_2))

PROD(NS(expr_2),
	NS(expr_2), TS(operator_multiplication), NS(expr_3))
PROD(NS(expr_2),
	NS(expr_2), TS(operator_division), NS(expr_3))
PROD(NS(expr_2),
	NS(expr_2), TS(operator_modulo), NS(expr_3))
PROD(NS(expr_2),
	NS(expr_3))

PROD(NS(expr_3),
	TS(operator_addition), NS(expr_4))
PROD(NS(expr_3),
	TS(operator_subtraction), NS(expr_4))
PROD(NS(expr_3),
	NS(expr_4))

PROD(NS(expr_4),
	TS(left_parenthesis), NS(expression), TS(right_parenthesis))
PROD(NS(expr_4),
	TS(identifier))
PROD(NS(expr_4),
	NS(module_call))
PROD(NS(expr_4),
	TS(constant_real))
PROD(NS(expr_4),
	TS(constant_bool))
PROD(NS(expr_4),
	TS(constant_string))

PROD(NS(module_call),
	TS(identifier), TS(left_parenthesis), TS(right_parenthesis))
PROD(NS(module_call),
	TS(identifier), TS(left_parenthesis), NS(module_call_argument_list), TS(right_parenthesis))

PROD(NS(module_call_argument_list),
	NS(expression))
PROD(NS(module_call_argument_list),
	NS(module_call_argument_list), TS(comma), NS(expression))
